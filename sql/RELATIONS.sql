----------------------------------------------------- Типы связей -----------------------------------------------------
-- связи "один-к-одному";
-- связи "один-ко-многим";
-- связи "многие-ко-многим".

------------------------------------------------ Связи "один-к-одному" ------------------------------------------------
-- При связи "один-к-одному" каждому элементу соответствует один и только один другой элемент.

-- Например, чтобы вывести адрес пользователя "Александр Иванов" можно воспользоваться следующей SQL-конструкцией:
SELECT * FROM Customers JOIN Adresses ON (Customers.id = Adresses.userid) WHERE Customers.id = 3;
-- +----+----------------+--------------+------------------+--------+-------------------------------+---------------------------+----------+
-- | id | firstname      | secondname   | telephone        | userId | city                          | street                    | postcode |
-- +----+----------------+--------------+------------------+--------+-------------------------------+---------------------------+----------+
-- |  3 | Дмитрий        | Петров       | +7-495-123-45-67 |      3 | Санкт-Петербург               | Тамбовская - 47           |   192007 |
-- +----+----------------+--------------+------------------+--------+-------------------------------+---------------------------+----------+

------------------------------------------------ Связь "один-ко-многим" ------------------------------------------------
-- В случае связи "один-ко-многим" каждый ключ из одной таблицы может встречаться несколько раз в другой таблице.
-- Это наиболее распространенный тип связи. Например, у одного покупателя может быть несколько заказов,
-- в то же время каждый заказ имеет свой уникальный идентификатор, но два покупателя могут заказать одну и ту же книгу:

-- Например, чтобы вывести все заказы пользователя "Александр Иванов" можно воспользоваться следующей SQL-конструкцией:
SELECT * FROM Customers JOIN Orders ON (Customers.id = Orders.userid) WHERE Customers.id = 3;
-- +----+----------------+--------------+------------------+---------+--------+--------+---------------------+
-- | id | firstname      | secondname   | telephone        | orderId | userId | bookId | dateOrder           |
-- +----+----------------+--------------+------------------+---------+--------+--------+---------------------+
-- |  3 | Дмитрий        | Петров       | +7-495-123-45-67 |       6 |      3 |      1 | 2013-04-12 12:56:00 |
-- |  3 | Дмитрий        | Петров       | +7-495-123-45-67 |       7 |      3 |      2 | 2013-04-14 10:11:00 |
-- +----+----------------+--------------+------------------+---------+--------+--------+---------------------+

----------------------------------------------- Связь "многие-ко-многим" -----------------------------------------------
-- Связь "многие-ко-многим" возникает между двумя таблицами, когда в каждой из них может присутствовать несколько
-- ключей другой таблицы. Например, покупатель приобретает в интернет-магазине сразу несколько книг.
-- Или одну и ту же книгу приобретают несколько покупателей.

-- Чтобы данные со связью "многие-ко-многим" могли быть представлены в базе данных,
-- этот тип связи преобразуется в две связи "один-ко-многим" с помощью таблицы отображения (mapping table).
-- В нашем случае такой таблицей является Orders.