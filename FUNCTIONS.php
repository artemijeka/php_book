<?php
/**
 * Created by PhpStorm.
 * User: artem
 * Date: 04.09.18
 * Time: 12:21
 */
////////////////////////////////////////////////////////////////////////////////////////////////////
/******************************************** СОЗДАНИЕ ФУНКЦИИ ********************************************/
/**
 * Задание конкретных типов аргументов и типа возвращаемого результата в функциях.
 *
 * : type
 * Можно указывать явно тип аргумента такие как int float string boolean array и т.п.
 * А так-же можно указать тип вывода данных через : после объявления функции.
 *
 * : ?type - означает что либо type либо null возвращается (? опционально)
 *
 * "return" - ключевое слово указывает на то, что это надо вернуть как результат функции.
 */
function example(int $number): ?int
{
    return $number;
}

/**
 * Или можно привести к типу перемунную в которую попадет результат функции.
 */
function bar() {
}
$foo = (bool) bar(); // здесь мы получем в переменную от функции значение boolean и только

////////////////////////////////////////////////////////////////////////////////////////////////////
/*************************************** ВСТРОЕННЫЕ ФУНКЦИИ ***************************************/
/**
 * Определяет установленная ли переменная или чтобы то нибыло еще.
 */
isset($_GET['name']);

/**
 * ВЕРНУТЬ ДЛИНУ СТРОКИ
 */
strlen("some string");

/**
 * ПОЛУЧИТЬ ЧАСТЬ СТРОКИ В UTF-8 mb_substr("СТРОКА какая-то", 0, 2); // 2 первых символа ("СТ")
 */
mb_substr("СТРОКА какая-то", 0, 2);// 2 первых символа "СТ"
mb_substr("СТРОКА какая-то", -2, 2);// 2 последних символа "то"
mb_substr("СТРОКА какая-то", 5, -3);// начиная с 5ого символа и обрезать с конца 3 симола "А какая"
mb_substr("СТРОКА какая-то", -5, -2);// начиная с конца с 5ого символа и 2 символа обрезав с конца "ая-"

/**
 * ПРОЧИТАТЬ СОДЕРЖИМОЕ ФАЙЛА В СТРОКУ
 */
file_get_contents('file.txt');

/**
 * ПОЛУЧИТЬ ИМЯ КЛАССА ИЗ ОБЪЕКТА
 */
get_class($object);

/**
 * EXTRACT - РАСПАКОВКА МАССИВА В ПЕРЕМЕННЫЕ С ЗНАЧЕНИЯМИ
 * Функция extract извлекает массив в переменные. То есть она делает следующее:
 * в неё передаётся массив ['key1' => 1, 'key2' => 2],
 * а после её вызова у нас имеются переменные $key1 = 1 и $key2 = 2.
 */
extract($array);

/***
 * ШИФРОВАНИЕ
 */
/**
 * Сейчас в PHP есть специальные функции для хэширования, которые используют современные алгоритмы шифрования.
 * Это функции _passwordhash() и _passwordverify(). Первая функция создаёт хэш для значения.
 */
echo password_hash('password', PASSWORD_DEFAULT); // $2y$10$Ot7AIHSuyDo13Kj6fl2ZOOc7fVCX6fmWx11H6qZQE/J4SLwpN.qQ6
/**
 * Во вторую передаются введенный пароль и хэш, полученный первой функцией. В результате вернётся false или true,
 * в зависимости от того, правильный ли пароль.
 */
var_dump(
    password_verify(
        'password',
        '$2y$10$Ot7AIHSuyDo13Kj6fl2ZOOc7fVCX6fmWx11H6qZQE/J4SLwpN.qQ6'
    )
); // boolean true

